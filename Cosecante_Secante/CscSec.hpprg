%%HP: T(0)A(D)F(.);

@ Autor: Erich Daniel Enamorado Aceituno
@ E-mail: erich.enamorado@unah.hn   
    
@ VersiÛn: 10
@ 30 de julio de 2023 1:23
@ Creado con HPUserEdit 6 Alpha 2


@73 columanas






´

{'X'} PURGE

@========================= CONFIGURAR FLAGS (MODOS) ===================@

  -17 SF -18 SF                         @MODO RADIAN
  -105 CF                               @MODO EXACTO
  -103 SF                               @MODO COMPLEJO
  -49 SF -50 CF                         @MODO FIX (CON CIFRAS DECIMALES)
  -45 CF -46 SF -47 CF -48 CF           @3 CIFRAS DECIMALES
  -120 SF                               @NO APARECE CHOOSEBIX EN lim

@======================== Definir el tipo de funciÛn ==================@

CLLCD                                                 @BORRA LA PANTALLA

"ECOJA   LA   FUNCI”N"
{
{ "Cosecante" ´1ª }
{ "Secante" ´0ª }
}
1
CHOOSE
IF
THEN
  EVAL
END

@=========================== INTRODUCCI”N DE DATOS ====================@


"INTRODUZCA LOS DATOS"
{
{ "A" "[A]* CSC(BX+C)+D"  }
{ "B" "A* CSC([B]X+C)+D"  }
{ "C" "A* CSC(BX+[C])+D"  }
{ "D" "A* CSC(BX+C)+[D]"  }
}
2
{ }
{ }
INFORM
DROP   @QUITA EL 1 DE CONFIRMACION
çQ    @Convertie cualquier decimal a exacto

IF DUP 2 GET 0 <
THEN


  IF 2 PICK
  THEN
  NEG
  EVAL NEG 4 çLIST
  ELSE
  DUP
  TAIL  REVLIST TAIL 0 + REVLIST 0 + 2 * -
  END

END
EVAL




 ç OP A B C D
 
 ´
@======================== CREAR CARPETA Y/O ENTRAR ====================@
PATH DUP
SIZE GET
VARS 'Resultados' POS

  ç X Y
  ´

  IF X 'Resultados' SAME NOT     Y 0. SAME AND
  THEN
  'Resultados' CRDIR

  END
  Resultados
  ª

@============================= COMOPROBAR DATOS =======================@
 
 IF A 0 SAME B 0 SAME OR
 THEN
 CLLCD "°°No es funciÛn, es una constante!!

a*csc(bX+c)+d" MSGBOX
 KILL                                                @SALIR DEL PROGRAMA
 END

@============================= Pantalla de espera ====================@ 
 #131d #72d BLANK

 {#13d #21d}
 "Espere 12 segundos"
 0 çGROB REPL

 {#59d #36d}
GROB 13 23 FFF13081FFF120802080208025902A8064C0C06085300B100B108130C46060C024802A802590AAA0FFF13081FFF1
REPL

 çLCD 0 FREEZE

@============================ ESCRIBIR FUNCION ========================@
                   
 A B 'X' * C + EVAL 
 OP ´ SIN INV ª ´ COS INV ª IFTE                @CONDICONAL IF THEN ELSE
  * D + EVAL 'Exp' STO

@=============================== PERIODO ==============================@

 2 á * B ABS / EVAL 'Peri' STO
     
@=============================== DESFASE ==============================@
       
 C B / NEG EVAL 'Desf' STO 
 
@=============================== PASO ==============================@

 Peri 8 / EVAL  'Step' STO                         

 
@================================ CICLO ===============================@

 OP ´ á NEG ª ´ á 2 / NEG ª IFTE
 C NEG + B / EVAL                            @LIMITE IZQUIERDO
 
 

   ç I
    ´
           
@################## OBTIENE LOS 5 VALORES DEL PERIODO  ################@
        
        

    0 8 FOR J 
    I Step J * + EVAL
    NEXT
   
    9 çLIST DUP 
    Exp SWAP lim 

@############################ TABULA LOS DATOS  #######################@

       ç A B 
         ´
         1 9
         FOR J
         A J GET B J GET  @BUCLE FOR PARA ORDENAR LOS DATOS DE 'A' Y 'B'
         NEXT

         {9 2} çARRY 
           'Tab' STO   
                 
         ª              
    ª


@==========================Asintoas vetivxcales================================
 
 Tab 1 GET  EVAL Peri 2 /  'N' * +
 'A.V' STO 
 
@============================ INTERCEPTO EN X =========================@

    Exp SOLVEVX
      
       IF DUP SIZE 0. SAME
        THEN
        DROP 'ÿ' 
        ELSE
        EVAL OBJç DROP2 SWAP DROP 'n1=0' lim
        çNUM
        Peri 'N' * +

        SWAP OBJç DROP2 SWAP DROP 'n1=0' lim çNUM Peri 'N' * +
        {2 1} çARRY 

        END


    
    'Ix' STO

@============================ INTERCEPTO EN Y =========================@
 
 Exp EVAL  
 0 lim  
 DUP 'ü' SAME ´ DROP 'ÿ' ª IFT 
 'Iy' STO 

@================================ DOMINIO =============================@
 
 'R' "-" Tab 1 GET  EVAL Peri 2 /  'N' * + 1 çLIST 3 çLIST 
 'Dom' STO 
   
@================================= RANGO ==============================@
  
 "R-]" 
 A ABS NEG D + çNUM çSTR    +   
 ","                        +                 
 A ABS D + çNUM çSTR        +
 "["                        +                    
 'Ran' STO
       
 ª

@============== TERMINA LOS CALCULO Y ORDENA DATOS ==========@







{'Exp' 'Peri' 'Desf' 'Step' 'A.V' 'Tab' 'Ix' 'Iy' 'Dom' 'Ran'} ORDER


{'X' 'PIf' 'Monot' 'Ampl'} PURGE
-103. CF    @modo REAL

      
PICT PURGE
 #131d #72d BLANK

 {#13d #17d}
 "Datos almacenados"
 0 çGROB REPL

 {#23d #28d}
 "en Resultados"
 0 çGROB REPL

 {#59d #45d}

GROB 22 26 00E00000A00000A00000A00000A00000A00008130008020000110000A0000040007000009FFF701000801EFFF3110002110002900001900001500080500080300040300040100020100020FFFF10
REPL

PICT STO


GROB 7 15 804141414141414141771414224180
DUP NEG


 { 2 { #66d #40d } 0.5 3 }
ANIMATE
 3 DROPN
KILL
ª
